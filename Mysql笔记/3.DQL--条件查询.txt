#进阶2：条件查询
/*

语法：
	select
		查询列表
	from
		表明
	where
		筛选条件;

分类：
	一、按条件表达式筛选
	条件运算符：> < = <>(!=) >= <=
	
	二、按逻辑表达式筛选
	逻辑运算符：
		and(&&) or(||) not(!)
	三、模糊查询
		like
		between and
		in
		is null
		
*/

#1.按条件表达式筛选

#案例1：查询工资>12000的员工信息
SELECT * FROM employees	WHERE salary>12000

#案例2：查询部门编号不等于90号的员工名和部门编号
SELECT 
	last_name,
	department_id
FROM
	employees
WHERE
	department_id<>(!=)90;
	
#2.按逻辑表达式筛选

#案例1：查询工资在10000到20000之间的员工名、工资以及奖金
SELECT
	last_name,
	salary,
	commission_pct
FROM
	employees
WHERE 
	salary>=10000 AND salary<=20000;

#案例2：查询部门编号不是在90到110之间，或者工资高于15000的员工信息
SELECT
	*
FROM
	employees
WHERE
	NOT (department_id>=90 AND department_id<=110) OR salary>=15000;

#3.模糊查询

#3.1 like
/*
1.一般和通配符搭配使用
	通配符：
	% 任意多个字符，包含0个字符
	_ 任意单个字符
*/

#案例1：查询员工名中包含字符a的员工信息
SELECT
	*
FROM
	employees
WHERE
	last_name LIKE '%a%';

#案例2：查询员工名中第三个字符为n，第五个字符为l的员工名和工资
SELECT
	last_name,
	salary
FROM
	employees
WHERE
	last_name LIKE '__n_l%';
	
#案例3：查询员工名中第二个字符为_的员工名
SELECT
	last_name
FROM
	employees
WHERE
	last_name LIKE '_\_%';
#\转义字符

SELECT
	last_name
FROM
	employees
WHERE
	last_name LIKE '_$_%' ESCAPE '$';
#自定义转义字符

#3.2 between and
/*
1.使用between and 可以提高语句的见解读
2.包含临界值
3，两个临界值不要调换顺序
*/

#案例1：查询员工编号在100到120之间的员工信息
SELECT
	*
FROM
	employees
WHERE
	employee_id BETWEEN 100 AND 120
#完全等价于employee_id>=100 AND employee_id<=120

#3.3 in

#案例1：查询员工的工种编号是 IT_PROT、AD_VP、AD_PRES中的一个员工名和工种编号
/*
含义：判断某字段的值是否属于in列表中的某一项(等价于=)
特点：
1.使用in提高语句简洁度
2.in列表的值类型必须一致或兼容(可以隐式的转换)eg：’123‘，123
3不支持通配符(like才支持)

*/
SELECT
	last_name,
	job_id
FROM
	employees
WHERE
	job_id IN('IT_PROT','AD_VP','AD_PRES');

#4. is null
/*
1.=或<>不能用于判断null值
2.is null或is not null可以判断null值
3.is 不能判断其他值
*/

#案例1：查询没有奖金的员工名和奖金率
SELECT
	last_name,
	commission_pct
FROM
	employees
WHERE
	commission_pct IS NULL;
	
#案例1：查询有奖金的员工名和奖金率
SELECT
	last_name,
	commission_pct
FROM
	employees
WHERE
	commission_pct IS NOT NULL;

#安全等于<=>
#案例1：查询没有奖金的员工名和奖金率
SELECT
	last_name,
	commission_pct
FROM
	employees
WHERE
	commission_pct <=> NULL;
	
#案例2：查询工资为12000的员工信息
SELECT
	last_name,
	salary
FROM
	employees
WHERE
	salary <=> 12000;

#is null pk <=>
/*
IS NULL：仅仅可以判断NULL值，可读性较高
<=>：既可以判断NULL值，又可以判断普通的数值，可读性较低
*/

#练习：
SELECT
	last_name,
	department_id,
	salary*12*(1+IFNULL(commission_pct,0)) AS 年薪
FROM
	employees
WHERE
	employee_id=176;
