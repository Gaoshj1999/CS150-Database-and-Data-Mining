#进阶7：子查询
/*
含义：
出现在其他语句中的select语句，称为子查询或内查询
外部的查询语句，称为主查询或外查询

分类：
按子查询出现的位置：
	select后面：
		仅仅支持标量子查询
		
	from后面：
		支持表子查询
		
	where或having后面(⭐)：
		标量子查询⭐
		列子查询⭐
		行子查询
		
	exists后面(相关子查询)：
		表子查询
	
按结果集的行列数不同：
	标准子查询(结果集只有一行一列)
	列子查询(结果集只有一列多行)
	行子查询(结果集有一行多列)
	表子查询(结果集一般为多行多列)

*/

#一、where或having后面
/*
1.标量子查询(单行子查询)
2.列子查询(多行子查询)
3.行子查询(一行多列)

特点：
1.子查询放在小括号内
2.子查询一般放在条件的右侧
3.标量子查询，一般搭配着单行操作符使用
> < <> >= <= =
4.列子查询，一般搭配着多行操作符使用
in、any/some、all
5.子查询的执行优先于主查询执行，主查询的条件用到子查询的结果

*/

#1.标量子查询

#案例1：谁的工资比Abel高？
#(1)查询Abel的工资
SELECT salary
FROM employees e
WHERE e.`last_name`='Abel';

#(2)查询员工的信息，满足salary>(1)结果
SELECT *
FROM employees
WHERE salary>(
		SELECT salary
		FROM employees
		WHERE last_name='Abel'
);

#案例2：返回job_id与141号员工相同，salary比143号员工多的员工姓名，job_id和工资
SELECT last_name,job_id,salary
FROM employees
WHERE job_id=(
		SELECT job_id
		FROM employees
		WHERE employee_id=141
)
AND salary>(
		SELECT salary
		FROM employees
		WHERE employee_id=143
);

#案例3：返回公司工资最少的员工的last_name,job_id和salary
SELECT last_name,job_id,salary
FROM employees
WHERE salary=(
		SELECT MIN(salary)
		FROM employees
);

#案例4：查询最低工资大于50号部门最低工资的部门id和其最低工资
SELECT department_id,MIN(salary)
FROM employees e
GROUP BY department_id
HAVING MIN(salary)>(
		SELECT MIN(salary)
		FROM employees e
		WHERE department_id=50
);

#非法使用标量子查询
/*
结果不是一行一列：

SELECT department_id,MIN(salary)
FROM employees e
GROUP BY department_id
HAVING MIN(salary)>(
		SELECT salary
		FROM employees e
		WHERE department_id=50
		
SELECT department_id,MIN(salary)
FROM employees e
GROUP BY department_id
HAVING MIN(salary)>(
		SELECT MIN(salary)
		FROM employees e
		WHERE department_id=250
		
*/

#2.列子查询(多行子查询)

#案例1：返回location_id是1400或1700的部门中的所有员工姓名
SELECT last_name
FROM employees
WHERE department_id IN(#等于=any
			SELECT DISTINCT department_id
			FROM departments
			WHERE location_id IN(1400,1700)
);

SELECT e.last_name
FROM employees e
JOIN departments d
ON e.`department_id`=d.`department_id`
WHERE d.`location_id` IN (1400,1700);#(内连接也可以做)

#案例2：返回其他工种中比job_id为'IT_PROG'工种任意工资低的员工的：工号、姓名、job_id以及salary
SELECT employee_id,last_name,job_id,salary
FROM employees
WHERE salary<ANY(
		SELECT salary
		FROM employees e
		WHERE job_id='IT_PROG'
) AND job_id NOT IN('IT_PROG');#<>

#或
SELECT employee_id,last_name,job_id,salary
FROM employees
WHERE salary<(
		SELECT MAX(salary)
		FROM employees e
		WHERE job_id='IT_PROG'
) AND job_id NOT IN('IT_PROG');

#案例3：返回其他工种中比job_id为'IT_PROG'工种所有工资低的员工的：工号、姓名、job_id以及salary
SELECT employee_id,last_name,job_id,salary
FROM employees
WHERE salary<ALL(
		SELECT salary
		FROM employees e
		WHERE job_id='IT_PROG'
) AND job_id <> 'IT_PROG';

#或
SELECT employee_id,last_name,job_id,salary
FROM employees
WHERE salary<(
		SELECT MIN(salary)
		FROM employees e
		WHERE job_id='IT_PROG'
) AND job_id <> 'IT_PROG';

#3、行子查询(结果集一行多列或多行多列)

#案例1：查询员工编号最小并且工资最高的员工信息

#行子查询：
#一般当查询多个条件，且连接符一致时可以考虑使用
SELECT *
FROM employees
WHERE (employee_id,salary)=(
			SELECT MIN(employee_id),MAX(salary)
			FROM employees
);

SELECT *
FROM employees
WHERE employee_id=(
		SELECT MIN(employee_id)
		FROM employees
)
AND salary=(
		SELECT MAX(salary)
		FROM employees
);#以前的做法

#二、select后面
/*
仅仅支持标量子查询
*/

#案例1：查询每个部门的员工个数
SELECT d.*,(
	SELECT COUNT(*)
	FROM employees e
	WHERE e.department_id=d.`department_id`
) 个数
FROM departments d;

#案例2：查询员工号=102的部门名
SELECT (
	SELECT department_name
	FROM departments d
	JOIN employees e
	ON d.department_id=e.department_id
	WHERE e.employee_id=102
) 部门名;

#三、from
/*
将子查寻结果充当一张表，要求必须起别名

*/
#案例1：查询每个部门的平均工资的工资等级
#1.查询每个部门的平均工资
SELECT AVG(salary),department_id
FROM employees
GROUP BY department_id

SELECT *FROM job_grades;

#2.连接1的结果集和job_grades表，筛选条件是平均工资 between lowest_sal and hightest_sal
SELECT agv.*,g.`grade_level`
FROM ( 	
	SELECT AVG(salary) ag,department_id
	FROM employees
	GROUP BY department_id
) agv
JOIN job_grades g
ON agv.ag BETWEEN lowest_sal AND highest_sal;

#四、exists后面(相关子查询)
/*
语法：
exist(完整的查询语句)
结果：
1或0

*/
SELECT EXISTS(
	SELECT employee_id
	FROM employees
	WHERE salary=30000
);

#案例1：查询有员工的部门名
SELECT department_name
FROM departments d
WHERE EXISTS(
	SELECT *
	FROM employees e
	WHERE d.`department_id`=e.`department_id`
);

#in
SELECT department_name
FROM departments d
WHERE d.`department_id` IN(
	SELECT department_id
	FROM employees e
);

